# This section defines default settings for how queries should be run.
# All settings can be overridden for any given query in its own section.
# The values shown in this example are also the fallback values used if
# a setting is not specified in the DEFAULT section or a query's section.
[DEFAULT]
# How often to run queries.
QueryIntervalSecs = 60
# How long to wait for a query to return before timing out.
QueryTimeoutSecs = 15
# The indices to run the query on.
# Any way of specifying indices supported by your Elasticsearch version can be used.
QueryIndices = _all
# What to do if a query throws an error. One of:
# * preserve - keep the metrics/values from the last successful run.
# * drop - remove metrics previously produced by the query.
# * zero - keep metrics previously produced by the query, but reset their values to 0.
QueryOnError = drop
# What to do if a metric produced by the previous run of a query is not present
# in the current run. One of:
# * preserve - keep the value of the metric from the last run it was present in.
# * drop - remove the metric.
# * zero - keep the metric, but reset its value to 0.
QueryOnMissing = drop
# Queries are defined in sections beginning with 'query_'.
# Characters following this prefix will be used as a prefix for all metrics
# generated for this query
# for merchant discovery latency event: olaElapsedTime 
[query_ow_es_ola_dsc_avg]
# The DEFAULT settings can be overridden.
QueryIndices = overwatch-core-*
QueryJson = {
    "aggs": {
      "ms": {
        "avg": {
          "field": "olaElapsedTime"
        }
      }
    },
    "size": 0,
    "stored_fields": [
      "*"
    ],
    "script_fields": {},
    "docvalue_fields": [
      {
        "field": "@timestamp",
        "format": "date_time"
      }
    ],
    "_source": {
      "excludes": []
    },
    "query": {
      "bool": {
        "must": [],
        "filter": [
          {
            "match_all": {}
          },
          {
            "match_phrase": {
              "name.keyword": "DISCOVERY_MS"
            }
          },
          {
            "match_phrase": {
              "eventType.keyword": "SLO"
            }
          },
          {
            "range": {
              "@timestamp": {
                  "gte": "now-1m/m",
                  "lt": "now/m",
                  "format": "strict_date_optional_time"
              }
            }
          }
        ],
        "should": [],
        "must_not": []
      }
    }  
  }
# 95 percentile
[query_ow_es_ola_dsc_95th_pct]
# The DEFAULT settings can be overridden.
QueryIndices = overwatch-core-*
QueryJson = {
    "aggs": {
      "ms": {
        "percentiles": {
          "field": "olaElapsedTime",
          "percents": [
            95
          ]
        }
      }
    },
    "size": 0,
    "stored_fields": [
      "*"
    ],
    "script_fields": {},
    "docvalue_fields": [
      {
        "field": "@timestamp",
        "format": "date_time"
      }
    ],
    "_source": {
      "excludes": []
    },
    "query": {
      "bool": {
        "must": [],
        "filter": [
          {
            "match_all": {}
          },
          {
            "match_phrase": {
              "name.keyword": "DISCOVERY_MS"
            }
          },
          {
            "match_phrase": {
              "eventType.keyword": "SLO"
            }
          },
          {
            "range": {
              "@timestamp": {
                  "gte": "now-1m/m",
                  "lt": "now/m",
                  "format": "strict_date_optional_time"
              }
            }
          }
        ],
        "should": [],
        "must_not": []
      }
    }  
  }
# for merchant discovery latency event: apiElapsedTime 
[query_ow_es_api_dsc_avg]
# The DEFAULT settings can be overridden.
QueryIndices = overwatch-core-*
QueryJson = {
    "aggs": {
      "ms": {
        "avg": {
          "field": "apiElapsedTime"
        }
      }
    },
    "size": 0,
    "stored_fields": [
      "*"
    ],
    "script_fields": {},
    "docvalue_fields": [
      {
        "field": "@timestamp",
        "format": "date_time"
      }
    ],
    "_source": {
      "excludes": []
    },
    "query": {
      "bool": {
        "must": [],
        "filter": [
          {
            "match_all": {}
          },
          {
            "match_phrase": {
              "name.keyword": "DISCOVERY_MS"
            }
          },
          {
            "match_phrase": {
              "eventType.keyword": "SLO"
            }
          },
          {
            "range": {
              "@timestamp": {
                  "gte": "now-1m/m",
                  "lt": "now/m",
                  "format": "strict_date_optional_time"
              }
            }
          }
        ],
        "should": [],
        "must_not": []
      }
    }  
  }
# 95 percentile
[query_ow_es_api_dsc_95th_pct]
# The DEFAULT settings can be overridden.
QueryIndices = overwatch-core-*
QueryJson = {
    "aggs": {
      "ms": {
        "percentiles": {
          "field": "apiElapsedTime",
          "percents": [
            95
          ]
        }
      }
    },
    "size": 0,
    "stored_fields": [
      "*"
    ],
    "script_fields": {},
    "docvalue_fields": [
      {
        "field": "@timestamp",
        "format": "date_time"
      }
    ],
    "_source": {
      "excludes": []
    },
    "query": {
      "bool": {
        "must": [],
        "filter": [
          {
            "match_all": {}
          },
          {
            "match_phrase": {
              "name.keyword": "DISCOVERY_MS"
            }
          },
          {
            "match_phrase": {
              "eventType.keyword": "SLO"
            }
          },
          {
            "range": {
              "@timestamp": {
                  "gte": "now-1m/m",
                  "lt": "now/m",
                  "format": "strict_date_optional_time"
              }
            }
          }
        ],
        "should": [],
        "must_not": []
      }
    }  
  }
# for get invoice latencies event: olaElapsedTime 
[query_ow_es_ola_get_inv_avg]
# The DEFAULT settings can be overridden.
QueryIndices = overwatch-core-*
QueryJson = {
    "aggs": {
      "ms": {
        "avg": {
          "field": "olaElapsedTime"
        }
      }
    },
    "size": 0,
    "stored_fields": [
      "*"
    ],
    "script_fields": {},
    "docvalue_fields": [
      {
        "field": "@timestamp",
        "format": "date_time"
      }
    ],
    "_source": {
      "excludes": []
    },
    "query": {
      "bool": {
        "must": [],
        "filter": [
          {
            "match_all": {}
          },
          {
            "match_phrase": {
              "name.keyword": "INVOICING"
            }
          },
          {
            "match_phrase": {
              "eventType.keyword": "SLO"
            }
          },
          {
            "range": {
              "@timestamp": {
                  "gte": "now-1m/m",
                  "lt": "now/m",
                  "format": "strict_date_optional_time"
              }
            }
          }
        ],
        "should": [],
        "must_not": []
      }
    }
  }
# 95 percentile: olaElapsedTime
[query_ow_es_ola_get_inv_95th_pct]
# The DEFAULT settings can be overridden.
QueryIndices = overwatch-core-*
QueryJson = {
    "aggs": {
      "ms": {
        "percentiles": {
          "field": "olaElapsedTime",
          "percents": [
            95
          ]
        }
      }
    },
    "size": 0,
    "stored_fields": [
      "*"
    ],
    "script_fields": {},
    "docvalue_fields": [
      {
        "field": "@timestamp",
        "format": "date_time"
      }
    ],
    "_source": {
      "excludes": []
    },
    "query": {
      "bool": {
        "must": [],
        "filter": [
          {
            "match_all": {}
          },
          {
            "match_phrase": {
              "name.keyword": "INVOICING"
            }
          },
          {
            "match_phrase": {
              "eventType.keyword": "SLO"
            }
          },
          {
            "range": {
              "@timestamp": {
                  "gte": "now-1m/m",
                  "lt": "now/m",
                  "format": "strict_date_optional_time"
              }
            }
          }
        ],
        "should": [],
        "must_not": []
      }
    }
  }
# for get invoice latencies event: apiElapsedTime 
[query_ow_es_api_get_inv_avg]
# The DEFAULT settings can be overridden.
QueryIndices = overwatch-core-*
QueryJson = {
    "aggs": {
      "ms": {
        "avg": {
          "field": "apiElapsedTime"
        }
      }
    },
    "size": 0,
    "stored_fields": [
      "*"
    ],
    "script_fields": {},
    "docvalue_fields": [
      {
        "field": "@timestamp",
        "format": "date_time"
      }
    ],
    "_source": {
      "excludes": []
    },
    "query": {
      "bool": {
        "must": [],
        "filter": [
          {
            "match_all": {}
          },
          {
            "match_phrase": {
              "name.keyword": "INVOICING"
            }
          },
          {
            "match_phrase": {
              "eventType.keyword": "SLO"
            }
          },
          {
            "range": {
              "@timestamp": {
                  "gte": "now-1m/m",
                  "lt": "now/m",
                  "format": "strict_date_optional_time"
              }
            }
          }
        ],
        "should": [],
        "must_not": []
      }
    }
  }
# 95 percentile: apiElapsedTime
[query_ow_es_api_get_inv_95th_pct]
# The DEFAULT settings can be overridden.
QueryIndices = overwatch-core-*
QueryJson = {
    "aggs": {
      "ms": {
        "percentiles": {
          "field": "apiElapsedTime",
          "percents": [
            95
          ]
        }
      }
    },
    "size": 0,
    "stored_fields": [
      "*"
    ],
    "script_fields": {},
    "docvalue_fields": [
      {
        "field": "@timestamp",
        "format": "date_time"
      }
    ],
    "_source": {
      "excludes": []
    },
    "query": {
      "bool": {
        "must": [],
        "filter": [
          {
            "match_all": {}
          },
          {
            "match_phrase": {
              "name.keyword": "INVOICING"
            }
          },
          {
            "match_phrase": {
              "eventType.keyword": "SLO"
            }
          },
          {
            "range": {
              "@timestamp": {
                  "gte": "now-1m/m",
                  "lt": "now/m",
                  "format": "strict_date_optional_time"
              }
            }
          }
        ],
        "should": [],
        "must_not": []
      }
    }
  }
# for quote for payment latencies event 
[query_ow_es_quote_for_pmt_avg]
# The DEFAULT settings can be overridden.
QueryIndices = overwatch-core-*
QueryJson = {
    "aggs": {
      "ms": {
        "avg": {
          "field": "elapsedTime"
        }
      }
    },
    "size": 0,
    "stored_fields": [
      "*"
    ],
    "script_fields": {},
    "docvalue_fields": [
      {
        "field": "@timestamp",
        "format": "date_time"
      }
    ],
    "_source": {
      "excludes": []
    },
    "query": {
      "bool": {
        "must": [],
        "filter": [
          {
            "match_all": {}
          },
          {
            "match_phrase": {
              "eventType.keyword": "API"
            }
          },
          {
            "match_phrase": {
              "name.keyword": "USERS_QUOTE_FOR_PAYMENT"
            }
          },
          {
            "range": {
              "@timestamp": {
                  "gte": "now-1m/m",
                  "lt": "now/m",
                  "format": "strict_date_optional_time"
              }
            }
          }
        ],
        "should": [],
        "must_not": []
      }
    }
  }
# 95 percentile 
[query_ow_es_quote_for_pmt_95th_pct]
# The DEFAULT settings can be overridden.
QueryIndices = overwatch-core-*
QueryJson = {
    "aggs": {
      "ms": {
        "percentiles": {
          "field": "elapsedTime",
          "percents": [
            95
          ]
        }
      }
    },
    "size": 0,
    "stored_fields": [
      "*"
    ],
    "script_fields": {},
    "docvalue_fields": [
      {
        "field": "@timestamp",
        "format": "date_time"
      }
    ],
    "_source": {
      "excludes": []
    },
    "query": {
      "bool": {
        "must": [],
        "filter": [
          {
            "match_all": {}
          },
          {
            "match_phrase": {
              "eventType.keyword": "API"
            }
          },
          {
            "match_phrase": {
              "name.keyword": "USERS_QUOTE_FOR_PAYMENT"
            }
          },
          {
            "range": {
              "@timestamp": {
                  "gte": "now-1m/m",
                  "lt": "now/m",
                  "format": "strict_date_optional_time"
              }
            }
          }
        ],
        "should": [],
        "must_not": []
      }
    }
  }
# for pay latencies event 
[query_ow_es_pay_avg]
# The DEFAULT settings can be overridden.
QueryIndices = overwatch-core-*
QueryJson = {
    "aggs": {
      "ms": {
        "avg": {
          "field": "elapsedTime"
        }
      }
    },
    "size": 0,
    "stored_fields": [
      "*"
    ],
    "script_fields": {},
    "docvalue_fields": [
      {
        "field": "@timestamp",
        "format": "date_time"
      }
    ],
    "_source": {
      "excludes": []
    },
    "query": {
      "bool": {
        "must": [],
        "filter": [
          {
            "match_all": {}
          },
          {
            "match_phrase": {
              "eventType.keyword": "JOB_TERMINAL"
            }
          },
          {
            "match_phrase": {
              "name.keyword": "U_PAY"
            }
          },
          {
            "range": {
              "@timestamp": {
                  "gte": "now-1m/m",
                  "lt": "now/m",
                  "format": "strict_date_optional_time"
              }
            }
          }
        ],
        "should": [],
        "must_not": []
      }
    }
  }
  # 95 percentile 
[query_ow_es_pay_95th_pct]
# The DEFAULT settings can be overridden.
QueryIndices = overwatch-core-*
QueryJson = {
    "aggs": {
      "ms": {
        "percentiles": {
          "field": "elapsedTime",
          "percents": [
            95
          ]
        }
      }
    },
    "size": 0,
    "stored_fields": [
      "*"
    ],
    "script_fields": {},
    "docvalue_fields": [
      {
        "field": "@timestamp",
        "format": "date_time"
      }
    ],
    "_source": {
      "excludes": []
    },
    "query": {
      "bool": {
        "must": [],
        "filter": [
          {
            "match_all": {}
          },
          {
            "match_phrase": {
              "eventType.keyword": "JOB_TERMINAL"
            }
          },
          {
            "match_phrase": {
              "name.keyword": "U_PAY"
            }
          },
          {
            "range": {
              "@timestamp": {
                  "gte": "now-1m/m",
                  "lt": "now/m",
                  "format": "strict_date_optional_time"
              }
            }
          }
        ],
        "should": [],
        "must_not": []
      }
    }
  }
# for block height
[query_ow_es_block]
# The DEFAULT settings can be overridden.
QueryIntervalSecs = 15
QueryOnError = preserve
QueryOnMissing = preserve
QueryIndices = overwatch-core-*
QueryJson = {
    "aggs": {
      "node": {
        "terms": {
          "field": "stellarCore.quorumInfo.quorum.node.keyword"
        },
        "aggs": {
          "block_height": {
            "max": {
              "field": "stellarCore.quorumInfo.quorum.qset.ledger"
            }
          },
          "include_source": {
            "top_hits": {
              "size": 10,
              "_source": {
                "includes": [
                  "node",
                  "stellarCore.quorumInfo.quorum.node"
                ]
              }
            }
          }
        }
      }
    },
    "query": {
      "bool": {
        "filter": [
          {
            "range": {
              "@timestamp": {
                "gte": "now-10s/s",
                "lte": "now/s"
              }
            }
          }
        ]
      }
    },
    "sort": [
      {
        "@timestamp": {
          "order": "asc"
        }
      }
    ],
    "size": 0
  }
# for stellar uptime
[query_ow_es_stellar]
# The DEFAULT settings can be overridden.
QueryIntervalSecs = 15
QueryIndices = overwatch-stellar-uptime-*
QueryJson = {
    "aggs": {
      "node": {
        "terms": {
          "field": "node.keyword"
        },
        "aggs": {
          "uptime": {
            "min": {
              "field": "uptime"
            }
          },
          "include_source": {
            "top_hits": {
              "size": 10,
              "_source": {
                "includes": [
                  "site",
                  "ip"
                ]
              }
            }
          }
        }
      }
    },
    "query": {
      "bool": {
        "filter": [
          {
            "range": {
              "@timestamp": {
                "gte": "now-2m/s",
                "lte": "now/s"
              }
            }
          }
        ]
      }
    },
    "sort": [
      {
        "@timestamp": {
          "order": "asc"
        }
      }
    ],
    "size": 0
  }